[
  {
    "objectID": "AEMER-1-Ejercicios.html",
    "href": "AEMER-1-Ejercicios.html",
    "title": "Análisis espaciales y multivariantes con R (AEMeR) aplicados a estudios de biodiversidad",
    "section": "",
    "text": "c()\nConcatena y combina objetos en el orden de inclusion, devolviendo un objeto de una dimension (vectores or listas). Devuelve un objeto del mismo tipo (vector or lista).\nseq(from, to, by)\nCrea una secuencia numérica. Los argumentos from, to y by establecen el valor de inicio, fin e incremento de la secuencia numérica. La función también acepta el parámetro length.out, que dividirá la secuencia numerica entre el valor de inicio y el de fin uniformemente en el número de valores indicados por length.out. Los argumentos from, to y by por defecto tienen valor en 1. La función devuelve un vector.\nlength(x)\nDevuelve el número de elementos en un objeto (numeric, character, factor or list).\n\n\n\n1. Como muchas funciones en R, seq() es flexible y puede trabajar de formas muy diferentes. Merece la pena entender como y porqué funciona de la forma en la que lo hace. Prueba los siguientes comandos:\n\nseq()\nseq(0, 5)\nseq(from = 0, to = 5)\nseq(to = 5)\nseq(to = 5, by = 0.5)\nseq(from = 10, to = 1, length.out = 10)\nseq(from = 5, to = 1, by = -2)\nseq(from = 5, to = 1, by = 2)\n\n\n¿Tienen sentido el resultado de todos estos comandos?\n\nTened en cuenta que se pueden pasar argumentos a una función en R ya sea por su nombre (por ejemplo, to = 5 o by = 0.1), o simplemente colocando los parámetros en el orden correcto. La función seq espera que le des argumentos en el orden (from, to, by). Puede averiguarlo revisando el archivo de ayuda ejecutando el código ?seq. En caso de duda, es más seguro especificar argumentos por su nombre, en cuyo caso cualquier orden está bien. Puedes probar por ejemplo con los siguientes comandos:\n\nseq(4, 8, 1)\nseq(by = 1, to = 8, from = 4)\nseq(to = 8, by = 1, from = 4)\n\n\n¿Se interpretan y devuelven el mismo resultado todos estos comandos?\n\nSi se está interesado en generar una secuencia entera, a menudo es más rápido usar un operador (un símbolo reservado para una tarea especial). Aquí, podríamos generar la secuencia anterior usando el operador :\n\n4:8\n\nOtros operadores comunes son +, -, *, /, ^, entre otros. Prueba todos ellos.\n2. Usa seq() y c() para crear un vector llamado “a” que contenga los enteros del 1 al 10, seguido de los enteros pares del 20 al 30, seguidos de los múltiplos de 5 del 150 al 100 (cuenta regresiva).\n\n¿Cuál es el decimocuarto elemento del vector “a”?\n\n\nUsa una sola línea de código R para encontrar los elementos 2º, 23º y 10º de “a”, en ese mismo orden.\n\n\nUsa length() para averiguar la longitud de “a”.\n\n3. Crea cuatro vectores diferentes. El primero llamado “nombres” con los nombres de 15 personas ficticias. El segundo llamado “sexo” con el sexo biológico de esas mismas 15 personas ficticias. El tercero llamado “peso” con el peso en kilogramos de cada una de esas 15 personas. Finalmente, el cuarto vector llamado “altura” deberá tener la estatura en metros de cada uno de ellos. Tened en cuenta, que los 4 vectores se ordenarán de forma correlativa: El primer peso que especifiquéis en el vector “peso” corresponderá al peso de la persona cuyo nombre aparezca en primera posición en el vector “nombres”. Una vez que hayas creado los cuatro vectores, calcula el índice de masa corporal (IMC), usando la siguiente fórmula: IMC = peso / estatura^2. Con esta información crear un vector con los nombres de las personas que hayan obtenido un IMC superior a 25."
  },
  {
    "objectID": "AEMER-1-Ejercicios.html#funciones-útiles",
    "href": "AEMER-1-Ejercicios.html#funciones-útiles",
    "title": "Análisis espaciales y multivariantes con R (AEMeR) aplicados a estudios de biodiversidad",
    "section": "",
    "text": "c()\nConcatena y combina objetos en el orden de inclusion, devolviendo un objeto de una dimension (vectores or listas). Devuelve un objeto del mismo tipo (vector or lista).\nseq(from, to, by)\nCrea una secuencia numérica. Los argumentos from, to y by establecen el valor de inicio, fin e incremento de la secuencia numérica. La función también acepta el parámetro length.out, que dividirá la secuencia numerica entre el valor de inicio y el de fin uniformemente en el número de valores indicados por length.out. Los argumentos from, to y by por defecto tienen valor en 1. La función devuelve un vector.\nlength(x)\nDevuelve el número de elementos en un objeto (numeric, character, factor or list)."
  },
  {
    "objectID": "AEMER-1-Ejercicios.html#ejercicios",
    "href": "AEMER-1-Ejercicios.html#ejercicios",
    "title": "Análisis espaciales y multivariantes con R (AEMeR) aplicados a estudios de biodiversidad",
    "section": "",
    "text": "1. Como muchas funciones en R, seq() es flexible y puede trabajar de formas muy diferentes. Merece la pena entender como y porqué funciona de la forma en la que lo hace. Prueba los siguientes comandos:\n\nseq()\nseq(0, 5)\nseq(from = 0, to = 5)\nseq(to = 5)\nseq(to = 5, by = 0.5)\nseq(from = 10, to = 1, length.out = 10)\nseq(from = 5, to = 1, by = -2)\nseq(from = 5, to = 1, by = 2)\n\n\n¿Tienen sentido el resultado de todos estos comandos?\n\nTened en cuenta que se pueden pasar argumentos a una función en R ya sea por su nombre (por ejemplo, to = 5 o by = 0.1), o simplemente colocando los parámetros en el orden correcto. La función seq espera que le des argumentos en el orden (from, to, by). Puede averiguarlo revisando el archivo de ayuda ejecutando el código ?seq. En caso de duda, es más seguro especificar argumentos por su nombre, en cuyo caso cualquier orden está bien. Puedes probar por ejemplo con los siguientes comandos:\n\nseq(4, 8, 1)\nseq(by = 1, to = 8, from = 4)\nseq(to = 8, by = 1, from = 4)\n\n\n¿Se interpretan y devuelven el mismo resultado todos estos comandos?\n\nSi se está interesado en generar una secuencia entera, a menudo es más rápido usar un operador (un símbolo reservado para una tarea especial). Aquí, podríamos generar la secuencia anterior usando el operador :\n\n4:8\n\nOtros operadores comunes son +, -, *, /, ^, entre otros. Prueba todos ellos.\n2. Usa seq() y c() para crear un vector llamado “a” que contenga los enteros del 1 al 10, seguido de los enteros pares del 20 al 30, seguidos de los múltiplos de 5 del 150 al 100 (cuenta regresiva).\n\n¿Cuál es el decimocuarto elemento del vector “a”?\n\n\nUsa una sola línea de código R para encontrar los elementos 2º, 23º y 10º de “a”, en ese mismo orden.\n\n\nUsa length() para averiguar la longitud de “a”.\n\n3. Crea cuatro vectores diferentes. El primero llamado “nombres” con los nombres de 15 personas ficticias. El segundo llamado “sexo” con el sexo biológico de esas mismas 15 personas ficticias. El tercero llamado “peso” con el peso en kilogramos de cada una de esas 15 personas. Finalmente, el cuarto vector llamado “altura” deberá tener la estatura en metros de cada uno de ellos. Tened en cuenta, que los 4 vectores se ordenarán de forma correlativa: El primer peso que especifiquéis en el vector “peso” corresponderá al peso de la persona cuyo nombre aparezca en primera posición en el vector “nombres”. Una vez que hayas creado los cuatro vectores, calcula el índice de masa corporal (IMC), usando la siguiente fórmula: IMC = peso / estatura^2. Con esta información crear un vector con los nombres de las personas que hayan obtenido un IMC superior a 25."
  },
  {
    "objectID": "AEMER-1-Ejercicios.html#funciones-útiles-1",
    "href": "AEMER-1-Ejercicios.html#funciones-útiles-1",
    "title": "Análisis espaciales y multivariantes con R (AEMeR) aplicados a estudios de biodiversidad",
    "section": "Funciones útiles",
    "text": "Funciones útiles\nmatrix(data, nrow, ncol)\nGenera una matriz, donde data son los datos que se colocan en dicha matriz que se organizan usando un número de filas = nrow y un número de columnas = ncol. El argumento data puede ser un número único, NA (sin dato o dato en blanco) o un vector.\nrnorm(n, mean, sd)\nDevuelve un vector de longitud n, en el que cada elemento es seleccionado aleatoriamente de una distribución normal con media = mean y desviación estandar = sd."
  },
  {
    "objectID": "AEMER-1-Ejercicios.html#ejercicios-1",
    "href": "AEMER-1-Ejercicios.html#ejercicios-1",
    "title": "Análisis espaciales y multivariantes con R (AEMeR) aplicados a estudios de biodiversidad",
    "section": "Ejercicios",
    "text": "Ejercicios\n1. Crea una matriz llamada “A” que tenga 12 filas y 8 columnas, donde cada elemento en la matriz sea un número diferente generado aleatoriamente de una distribución normal con una media de 3 y una desviación estándar de 2. Establece una nueva variable “b” que sea igual al elemento en la quinta fila y la sexta columna de “A”.\n\nTened en cuenta que, una vez que se establece, “b” es independiente de “A”. Mantendrá su valor como esté definido, incluso si los elementos de “A” cambian posteriormente.\n\n2. Crea un data frame llamado “datos” que contenga la información de los cuatro vectores (i.e., nombres, sexo, altura y peso) de los ejercicios anteriores. Vuelve a calcular el IMC, pero usando los datos almacenados dentro de este data frame e incorpora el resultado como una nueva columna dentro del propio data frame.\n3. Crea 10 matrices como “A”, pero con diferentes valores (solo tendrás que ejecutar 10 veces el mismo comando) y guarda cada una de ellas como un elemento dentro de una lista, llamada “matrix_list”."
  },
  {
    "objectID": "AEMER-1-Ejercicios.html#funciones-útiles-2",
    "href": "AEMER-1-Ejercicios.html#funciones-útiles-2",
    "title": "Análisis espaciales y multivariantes con R (AEMeR) aplicados a estudios de biodiversidad",
    "section": "Funciones útiles",
    "text": "Funciones útiles\nread.csv(path)\nAquí, path indica la ubicación del archivo en el disco duro y este argumento se introduce como una cadena de texto (entre comillas). Tened en cuenta que los datos se leen en la memoria RAM del ordenador para que R trabaje con ellos. Los cambios que realices en los datos se almacenan solo en la memoria, NO alteran el archivo de datos original. Esta y otras funciones relacionadas (read.delim(), read.table() y otras) devuelven un data frame. A menudo es una buena idea usar la opción as.is = T, que impide la conversión de variables de tipo character en variables de tipo factor.\nhead(x)\nImprime en la pantalla los primeros elementos de x (si x es un vector) o las primeras filas de x (si x es una matriz o data frame).\ndim(x)\nDevuelve el número de filas y columnas (en ese orden) en un objeto bidimensional x.\nstr(x)\nDevuelve la estructura de un objeto, incluida su clase, y los nombres de sus componentes, si corresponde.\nwhich(x)\nDevuelve los índices de los elementos de x que son TRUE. Nota que x debe ser un vector o matriz de tipo logic (i.e. todos los valores son TRUE o FALSE).\nifelse(test, yes, no)\nComprueba una condición (test) y si se cumple devuelve el valor especificado en el argumento yes. Si la condición no se cumple, devuelve el valor especificado en el argumento no.\napply(X, MARGIN, FUN)\nRealiza alguna función (FUN) en cada fila o columna de una matriz o marco de datos (X). MARGIN permite especificar si se debe realizar la función en filas (MARGIN = 1) o en columnas (MARGIN = 2). FUN permite especificar la función a realizar (e.g. FUN = mean, FUN = sd o FUN = sum)\n\nAlgunas funciones útiles para usar aquí son max, min, mean, sum, entre otras. Explora con todas ellas e intenta averiguar que hace cada una."
  },
  {
    "objectID": "AEMER-1-Ejercicios.html#ejercicios-2",
    "href": "AEMER-1-Ejercicios.html#ejercicios-2",
    "title": "Análisis espaciales y multivariantes con R (AEMeR) aplicados a estudios de biodiversidad",
    "section": "Ejercicios",
    "text": "Ejercicios\n1. Lee en R un fichero de datos de ejemplo (“Abundancia.csv”) que incluye información sobre la abundancia de varias especies en diferentes sitios y llama al data frame resultante “abundancia”. Usa head(), names() y str() para explorar la estructura del data frame “abundancia”.\n2. Usa la función apply() para calcular la abundancia promedio de cada especie en los 10 sitios.\n\nTen en cuenta que ahora estamos trabajando con un data frame, por lo que no todas las columnas son numéricas. La columna con el nombre de especie no puede realizar operaciones numéricas, por lo que tendrás que excluir esa columna de alguna manera. Para ello puedes usar los corchetes [] de forma similar a como hacíamos para seleccionar elementos dentro de un vector o de una matriz.\n\n3. Usa la función which() para determinar qué sitios tienen al menos 10 individuos de Lupinus bicolor. Usa la función which() para determinar qué especies tienen una abundancia de al menos 5 en el Site5.\n4. Crea una nueva matriz llamada “presencia” donde cada elemento de “presencia” es 1, si el valor correspondiente de “abundancia” es mayor que 0, y 0 en el caso contrario.\n5. Usando la matriz “presencia” que creastes y la función apply(), calcula la riqueza de especies (i.e. el número de especies) de cada sitio.\n6. Escribe la matriz “presencia” que creaste en un archivo “Presencia.csv”."
  },
  {
    "objectID": "AEMER-1-Ejercicios.html#funciones-útiles-3",
    "href": "AEMER-1-Ejercicios.html#funciones-útiles-3",
    "title": "Análisis espaciales y multivariantes con R (AEMeR) aplicados a estudios de biodiversidad",
    "section": "Funciones útiles",
    "text": "Funciones útiles\nplot (x, y,...)\nDibuja los datos de x contra los datos de y. Es personalizable utilizando una amplia gama de opciones.\nhist (x)\nDibuja un histograma de x. Se puede personalizar de varias maneras, incluido el uso de puntos de cambio para cambiar la definición de la anchura de las barras.\nabline (a, b)\nDibuja una línea en la gráfica ya existente con la pendiente especificada b e intercepto a. También puede dibujar líneas horizontales o verticales en un valor concreto usando h = valor o v = valor.\npoints(x, y), segments(x0, y0, x1, y1), arrows(x0, y0, x1, y1), polygons(x, y)\nDibuja puntos, segmentos de línea, flechas o polígonos en una gráfica ya existente.\nlm(x, y)*\nGenera un modelo lineal entre las dos variables."
  },
  {
    "objectID": "AEMER-1-Ejercicios.html#ejercicios-3",
    "href": "AEMER-1-Ejercicios.html#ejercicios-3",
    "title": "Análisis espaciales y multivariantes con R (AEMeR) aplicados a estudios de biodiversidad",
    "section": "Ejercicios",
    "text": "Ejercicios\n1. Dibuja un histograma del vector “a” que creaste en los Ejercicios de la parte 1. Cambia el color de las barras con la opción col y cambia el color de los cuadros con la opción de border. Usa abline() para dibujar la media de la distribución como una línea vertical punteada.\n\nAquí deberás usar la función mean para calcular la media antes.\n\n2. Crea dos variables correlacionadas “x” e “y”, usando x &lt;- rnorm (200) e y = x + rnorm (200). Dibuja “x” vs. “y” y juegua con los parámetros de trazado. Usa la abline para incluir una recta de regresión entre las dos variables.\n3. Genera un nuevo conjunto de datos “w” correlacionado con “x”, usando w &lt;- 2*x * rnorm(200). Añade esta nuevo conjunto de datos al gráfico anterior pero cambiando el color para que se distingan bien los datos de “y” y “w”. Además, añade otra recta de regresión entre “w” y “x”."
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#para-ello-usaremos-el-paquete-terra",
    "href": "AEMER-2_Analisis_espacial.html#para-ello-usaremos-el-paquete-terra",
    "title": "Análisis de datos espaciales en R",
    "section": "Para ello usaremos el paquete Terra",
    "text": "Para ello usaremos el paquete Terra\n\nlibrary(terra)"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#crear-datos-vectoriales-desde-cero",
    "href": "AEMER-2_Analisis_espacial.html#crear-datos-vectoriales-desde-cero",
    "title": "Análisis de datos espaciales en R",
    "section": "Crear datos vectoriales desde cero",
    "text": "Crear datos vectoriales desde cero\n\nlon &lt;- c(-116.7, -120.4, -116.7, -113.5, -115.5, -120.8, -119.5, -113.7, -113.7, -110.7) \nlat &lt;- c(45.3, 42.6, 38.9, 42.1, 35.7, 38.9, 36.2, 39, 41.6, 36.9) \nlonlat &lt;- cbind(lon, lat) \npts &lt;- vect(lonlat) \npts\n\n class       : SpatVector \n geometry    : points \n dimensions  : 10, 0  (geometries, attributes)\n extent      : -120.8, -110.7, 35.7, 45.3  (xmin, xmax, ymin, ymax)\n coord. ref. :  \n\n\n\n\nFijaros que el apartado “coord. ref.” está vacío."
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#revisar",
    "href": "AEMER-2_Analisis_espacial.html#revisar",
    "title": "Análisis de datos espaciales en R",
    "section": "Revisar",
    "text": "Revisar\n\nclass (pts)\n\n[1] \"SpatVector\"\nattr(,\"package\")\n[1] \"terra\"\n\n\n\ngeom(pts)\n\n      geom part      x    y hole\n [1,]    1    1 -116.7 45.3    0\n [2,]    2    1 -120.4 42.6    0\n [3,]    3    1 -116.7 38.9    0\n [4,]    4    1 -113.5 42.1    0\n [5,]    5    1 -115.5 35.7    0\n [6,]    6    1 -120.8 38.9    0\n [7,]    7    1 -119.5 36.2    0\n [8,]    8    1 -113.7 39.0    0\n [9,]    9    1 -113.7 41.6    0\n[10,]   10    1 -110.7 36.9    0"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#visualizar",
    "href": "AEMER-2_Analisis_espacial.html#visualizar",
    "title": "Análisis de datos espaciales en R",
    "section": "Visualizar",
    "text": "Visualizar\n\nplot(pts)"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#establecer-sistema-de-referencia-de-coordenadas-crs",
    "href": "AEMER-2_Analisis_espacial.html#establecer-sistema-de-referencia-de-coordenadas-crs",
    "title": "Análisis de datos espaciales en R",
    "section": "Establecer sistema de referencia de coordenadas (CRS)",
    "text": "Establecer sistema de referencia de coordenadas (CRS)\n\ncrdref &lt;- \"+proj=longlat +datum=WGS84\"\npts &lt;- vect(lonlat, crs=crdref)\npts\n\n class       : SpatVector \n geometry    : points \n dimensions  : 10, 0  (geometries, attributes)\n extent      : -120.8, -110.7, 35.7, 45.3  (xmin, xmax, ymin, ymax)\n coord. ref. : +proj=longlat +datum=WGS84 +no_defs"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#podemos-comprobar-sólo-el-crs-de-un-archivo-vectorial",
    "href": "AEMER-2_Analisis_espacial.html#podemos-comprobar-sólo-el-crs-de-un-archivo-vectorial",
    "title": "Análisis de datos espaciales en R",
    "section": "Podemos comprobar sólo el CRS de un archivo vectorial",
    "text": "Podemos comprobar sólo el CRS de un archivo vectorial\n\ncrs(pts)\n\n[1] \"GEOGCRS[\\\"unknown\\\",\\n    DATUM[\\\"World Geodetic System 1984\\\",\\n        ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n            LENGTHUNIT[\\\"metre\\\",1]],\\n        ID[\\\"EPSG\\\",6326]],\\n    PRIMEM[\\\"Greenwich\\\",0,\\n        ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n        ID[\\\"EPSG\\\",8901]],\\n    CS[ellipsoidal,2],\\n        AXIS[\\\"longitude\\\",east,\\n            ORDER[1],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433,\\n                ID[\\\"EPSG\\\",9122]]],\\n        AXIS[\\\"latitude\\\",north,\\n            ORDER[2],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433,\\n                ID[\\\"EPSG\\\",9122]]]]\""
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#la-ubicación-sola-no-es-muy-interesante",
    "href": "AEMER-2_Analisis_espacial.html#la-ubicación-sola-no-es-muy-interesante",
    "title": "Análisis de datos espaciales en R",
    "section": "La ubicación sola no es muy interesante…",
    "text": "La ubicación sola no es muy interesante…\nVamos a simular valores de precipitación al azar, un valor para cada punto.\n\nprecipvalue &lt;- round(runif(nrow(lonlat), min=0, max=100))\ndf &lt;- data.frame(ID=1:nrow(lonlat), precip=precipvalue)\npts &lt;- vect(lonlat, atts=df, crs=crdref)\npts\n\n class       : SpatVector \n geometry    : points \n dimensions  : 10, 2  (geometries, attributes)\n extent      : -120.8, -110.7, 35.7, 45.3  (xmin, xmax, ymin, ymax)\n coord. ref. : +proj=longlat +datum=WGS84 +no_defs \n names       :    ID precip\n type        : &lt;int&gt;  &lt;num&gt;\n values      :     1     28\n                   2     33\n                   3     92"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#graficar-precipitaciones",
    "href": "AEMER-2_Analisis_espacial.html#graficar-precipitaciones",
    "title": "Análisis de datos espaciales en R",
    "section": "Graficar precipitaciones",
    "text": "Graficar precipitaciones\n\nplot(pts, cex = precip/10)"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#vamos-a-genera-un-segundo-conjunto-de-puntos",
    "href": "AEMER-2_Analisis_espacial.html#vamos-a-genera-un-segundo-conjunto-de-puntos",
    "title": "Análisis de datos espaciales en R",
    "section": "Vamos a genera un segundo conjunto de puntos…",
    "text": "Vamos a genera un segundo conjunto de puntos…\n\nlon2 &lt;- c(-116.8, -114.2, -112.9, -111.9, -114.2, -115.4, -117.7)\nlat2 &lt;- c(41.3, 42.9, 42.4, 39.8, 37.6, 38.3, 37.6)\nlonlat2 &lt;- cbind(id=c(1,1,1,1,1,1,1), part=c(1,1,1,1,1,1,1), lon2, lat2)\nlonlat2\n\n     id part   lon2 lat2\n[1,]  1    1 -116.8 41.3\n[2,]  1    1 -114.2 42.9\n[3,]  1    1 -112.9 42.4\n[4,]  1    1 -111.9 39.8\n[5,]  1    1 -114.2 37.6\n[6,]  1    1 -115.4 38.3\n[7,]  1    1 -117.7 37.6"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#pero-para-crear-datos-de-líneas",
    "href": "AEMER-2_Analisis_espacial.html#pero-para-crear-datos-de-líneas",
    "title": "Análisis de datos espaciales en R",
    "section": "… pero para crear datos de líneas…",
    "text": "… pero para crear datos de líneas…\n\nlns &lt;- vect(lonlat2, type=\"lines\", crs=crdref)\nlns\n\n class       : SpatVector \n geometry    : lines \n dimensions  : 1, 0  (geometries, attributes)\n extent      : -117.7, -111.9, 37.6, 42.9  (xmin, xmax, ymin, ymax)\n coord. ref. : +proj=longlat +datum=WGS84 +no_defs \n\n\n\nplot(lns)"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#o-un-datos-de-polígonos.",
    "href": "AEMER-2_Analisis_espacial.html#o-un-datos-de-polígonos.",
    "title": "Análisis de datos espaciales en R",
    "section": "… o un datos de polígonos.",
    "text": "… o un datos de polígonos.\n\npols &lt;- vect(lonlat2, type=\"polygons\", crs=crdref)\npols\n\n class       : SpatVector \n geometry    : polygons \n dimensions  : 1, 0  (geometries, attributes)\n extent      : -117.7, -111.9, 37.6, 42.9  (xmin, xmax, ymin, ymax)\n coord. ref. : +proj=longlat +datum=WGS84 +no_defs \n\n\n\nplot(pols)"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#cargando-datos-ya-existentes",
    "href": "AEMER-2_Analisis_espacial.html#cargando-datos-ya-existentes",
    "title": "Análisis de datos espaciales en R",
    "section": "Cargando datos ya existentes",
    "text": "Cargando datos ya existentes\n\n# install.packages(\"geodata\")\nlibrary(geodata)\narg &lt;- gadm(\"ARG\", level = 1, path = \".\")\narg\n\n class       : SpatVector \n geometry    : polygons \n dimensions  : 24, 11  (geometries, attributes)\n extent      : -73.56056, -53.59184, -55.06153, -21.78137  (xmin, xmax, ymin, ymax)\n coord. ref. : lon/lat WGS 84 (EPSG:4326) \n names       :   GID_1 GID_0   COUNTRY       NAME_1       VARNAME_1 NL_NAME_1\n type        :   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;        &lt;chr&gt;           &lt;chr&gt;     &lt;chr&gt;\n values      : ARG.1_1   ARG Argentina Buenos Aires Baires|Buenos ~        NA\n               ARG.2_1   ARG Argentina    Catamarca              NA        NA\n               ARG.3_1   ARG Argentina        Chaco El Chaco|Presi~        NA\n    TYPE_1 ENGTYPE_1  CC_1 HASC_1 ISO_1\n     &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;\n Provincia  Province    NA  AR.BA  AR-B\n Provincia  Province    NA  AR.CT  AR-K\n Provincia  Province    NA  AR.CC  AR-H"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#escribir-ficheros-vectoriales",
    "href": "AEMER-2_Analisis_espacial.html#escribir-ficheros-vectoriales",
    "title": "Análisis de datos espaciales en R",
    "section": "Escribir ficheros vectoriales",
    "text": "Escribir ficheros vectoriales\n\nwriteVector(arg, \"arg.shp\", overwrite=TRUE)"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#crear-datos-raster",
    "href": "AEMER-2_Analisis_espacial.html#crear-datos-raster",
    "title": "Análisis de datos espaciales en R",
    "section": "Crear datos raster",
    "text": "Crear datos raster\n\nr &lt;- rast(ncol=10, nrow=10, xmin=-150, xmax=-80, ymin=20, ymax=60)\nr\n\nclass       : SpatRaster \ndimensions  : 10, 10, 1  (nrow, ncol, nlyr)\nresolution  : 7, 4  (x, y)\nextent      : -150, -80, 20, 60  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84) \n\n\n\nvalues(r) &lt;- runif(ncell(r))\nr\n\nclass       : SpatRaster \ndimensions  : 10, 10, 1  (nrow, ncol, nlyr)\nresolution  : 7, 4  (x, y)\nextent      : -150, -80, 20, 60  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84) \nsource(s)   : memory\nname        :       lyr.1 \nmin value   : 0.008342978 \nmax value   : 0.998458780 \n\n\n\nvalues(r) &lt;- 1:ncell(r)\nr\n\nclass       : SpatRaster \ndimensions  : 10, 10, 1  (nrow, ncol, nlyr)\nresolution  : 7, 4  (x, y)\nextent      : -150, -80, 20, 60  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84) \nsource(s)   : memory\nname        : lyr.1 \nmin value   :     1 \nmax value   :   100"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#graficar-datos-raster",
    "href": "AEMER-2_Analisis_espacial.html#graficar-datos-raster",
    "title": "Análisis de datos espaciales en R",
    "section": "Graficar datos raster",
    "text": "Graficar datos raster\n\nplot(r)"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#añadir-información-vectorial-sobre-el-gráfico",
    "href": "AEMER-2_Analisis_espacial.html#añadir-información-vectorial-sobre-el-gráfico",
    "title": "Análisis de datos espaciales en R",
    "section": "Añadir información vectorial sobre el gráfico",
    "text": "Añadir información vectorial sobre el gráfico\n\nplot(r)\npoints(pts, col=\"red\", pch=20, cex=3)\nlines(pols, col=\"blue\", lwd=2)"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#operar-con-datos-raster",
    "href": "AEMER-2_Analisis_espacial.html#operar-con-datos-raster",
    "title": "Análisis de datos espaciales en R",
    "section": "Operar con datos raster",
    "text": "Operar con datos raster\n\nr2 &lt;- r * r\nr3  &lt;- sqrt(r)"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#combinar-raster-para-crear-un-objeto-multicapa",
    "href": "AEMER-2_Analisis_espacial.html#combinar-raster-para-crear-un-objeto-multicapa",
    "title": "Análisis de datos espaciales en R",
    "section": "Combinar raster para crear un objeto multicapa",
    "text": "Combinar raster para crear un objeto multicapa\n\nstck &lt;- c(r, r2, r3)\nstck\n\nclass       : SpatRaster \ndimensions  : 10, 10, 3  (nrow, ncol, nlyr)\nresolution  : 7, 4  (x, y)\nextent      : -150, -80, 20, 60  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84) \nsource(s)   : memory\nnames       : lyr.1, lyr.1, lyr.1 \nmin values  :     1,     1,     1 \nmax values  :   100, 10000,    10"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#graficar-datos-multicapa",
    "href": "AEMER-2_Analisis_espacial.html#graficar-datos-multicapa",
    "title": "Análisis de datos espaciales en R",
    "section": "Graficar datos multicapa",
    "text": "Graficar datos multicapa\n\nplot(stck)"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#extraer-capas-sueltas-de-objetos-multicapa",
    "href": "AEMER-2_Analisis_espacial.html#extraer-capas-sueltas-de-objetos-multicapa",
    "title": "Análisis de datos espaciales en R",
    "section": "Extraer capas sueltas de objetos multicapa",
    "text": "Extraer capas sueltas de objetos multicapa\n\nr2 &lt;- stck[[2]]\nr2\n\nclass       : SpatRaster \ndimensions  : 10, 10, 1  (nrow, ncol, nlyr)\nresolution  : 7, 4  (x, y)\nextent      : -150, -80, 20, 60  (xmin, xmax, ymin, ymax)\ncoord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84) \nsource(s)   : memory\nname        : lyr.1 \nmin value   :     1 \nmax value   : 10000"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#cargar-datos-raster",
    "href": "AEMER-2_Analisis_espacial.html#cargar-datos-raster",
    "title": "Análisis de datos espaciales en R",
    "section": "Cargar datos raster",
    "text": "Cargar datos raster\n\nf &lt;- system.file(\"ex/logo.tif\", package=\"terra\")\nbasename(f)\n\n[1] \"logo.tif\"\n\n\n\nr &lt;- rast(f)\nr\n\nclass       : SpatRaster \ndimensions  : 77, 101, 3  (nrow, ncol, nlyr)\nresolution  : 1, 1  (x, y)\nextent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax)\ncoord. ref. : Cartesian (Meter) \nsource      : logo.tif \ncolors RGB  : 1, 2, 3 \nnames       : red, green, blue \nmin values  :   0,     0,    0 \nmax values  : 255,   255,  255"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#escribir-fichero-de-datos-raster",
    "href": "AEMER-2_Analisis_espacial.html#escribir-fichero-de-datos-raster",
    "title": "Análisis de datos espaciales en R",
    "section": "Escribir fichero de datos raster",
    "text": "Escribir fichero de datos raster\n\nx &lt;- writeRaster(r[[2]], \"test_output.tif\", overwrite=TRUE)\nx\n\nclass       : SpatRaster \ndimensions  : 77, 101, 1  (nrow, ncol, nlyr)\nresolution  : 1, 1  (x, y)\nextent      : 0, 101, 0, 77  (xmin, xmax, ymin, ymax)\ncoord. ref. : Cartesian (Meter) \nsource      : test_output.tif \nname        : green \nmin value   :     0 \nmax value   :   255"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#comprobamos-el-crs-de-alguno-de-nuestros-datos",
    "href": "AEMER-2_Analisis_espacial.html#comprobamos-el-crs-de-alguno-de-nuestros-datos",
    "title": "Análisis de datos espaciales en R",
    "section": "Comprobamos el CRS de alguno de nuestros datos",
    "text": "Comprobamos el CRS de alguno de nuestros datos\n\ncrs(arg)\n\n[1] \"GEOGCRS[\\\"WGS 84\\\",\\n    DATUM[\\\"World Geodetic System 1984\\\",\\n        ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n            LENGTHUNIT[\\\"metre\\\",1]]],\\n    PRIMEM[\\\"Greenwich\\\",0,\\n        ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n    CS[ellipsoidal,2],\\n        AXIS[\\\"geodetic latitude (Lat)\\\",north,\\n            ORDER[1],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n        AXIS[\\\"geodetic longitude (Lon)\\\",east,\\n            ORDER[2],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n    ID[\\\"EPSG\\\",4326]]\""
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#se-puede-borrar-el-crs-del-conjunto-de-datos",
    "href": "AEMER-2_Analisis_espacial.html#se-puede-borrar-el-crs-del-conjunto-de-datos",
    "title": "Análisis de datos espaciales en R",
    "section": "Se puede borrar el CRS del conjunto de datos",
    "text": "Se puede borrar el CRS del conjunto de datos\n\npp &lt;- arg\ncrs(pp) &lt;- \"\"\ncrs(pp)\n\n[1] \"\""
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#o-se-puede-especificar-a-mano-estandar-proj.4",
    "href": "AEMER-2_Analisis_espacial.html#o-se-puede-especificar-a-mano-estandar-proj.4",
    "title": "Análisis de datos espaciales en R",
    "section": "O se puede especificar a mano (estandar PROJ.4)",
    "text": "O se puede especificar a mano (estandar PROJ.4)\n\ncrs(pp) &lt;- \"+proj=longlat +datum=WGS84\"\ncrs(pp)\n\n[1] \"GEOGCRS[\\\"unknown\\\",\\n    DATUM[\\\"World Geodetic System 1984\\\",\\n        ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n            LENGTHUNIT[\\\"metre\\\",1]],\\n        ID[\\\"EPSG\\\",6326]],\\n    PRIMEM[\\\"Greenwich\\\",0,\\n        ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n        ID[\\\"EPSG\\\",8901]],\\n    CS[ellipsoidal,2],\\n        AXIS[\\\"longitude\\\",east,\\n            ORDER[1],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433,\\n                ID[\\\"EPSG\\\",9122]]],\\n        AXIS[\\\"latitude\\\",north,\\n            ORDER[2],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433,\\n                ID[\\\"EPSG\\\",9122]]]]\""
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#o-se-puede-especificar-con-los-códigos-epsg",
    "href": "AEMER-2_Analisis_espacial.html#o-se-puede-especificar-con-los-códigos-epsg",
    "title": "Análisis de datos espaciales en R",
    "section": "O se puede especificar con los códigos EPSG",
    "text": "O se puede especificar con los códigos EPSG\n\ncrs(pp) &lt;- \"EPSG:4326\"\ncrs(pp)\n\n[1] \"GEOGCRS[\\\"WGS 84\\\",\\n    ENSEMBLE[\\\"World Geodetic System 1984 ensemble\\\",\\n        MEMBER[\\\"World Geodetic System 1984 (Transit)\\\"],\\n        MEMBER[\\\"World Geodetic System 1984 (G730)\\\"],\\n        MEMBER[\\\"World Geodetic System 1984 (G873)\\\"],\\n        MEMBER[\\\"World Geodetic System 1984 (G1150)\\\"],\\n        MEMBER[\\\"World Geodetic System 1984 (G1674)\\\"],\\n        MEMBER[\\\"World Geodetic System 1984 (G1762)\\\"],\\n        MEMBER[\\\"World Geodetic System 1984 (G2139)\\\"],\\n        ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n            LENGTHUNIT[\\\"metre\\\",1]],\\n        ENSEMBLEACCURACY[2.0]],\\n    PRIMEM[\\\"Greenwich\\\",0,\\n        ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n    CS[ellipsoidal,2],\\n        AXIS[\\\"geodetic latitude (Lat)\\\",north,\\n            ORDER[1],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n        AXIS[\\\"geodetic longitude (Lon)\\\",east,\\n            ORDER[2],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n    USAGE[\\n        SCOPE[\\\"Horizontal component of 3D system.\\\"],\\n        AREA[\\\"World.\\\"],\\n        BBOX[-90,-180,90,180]],\\n    ID[\\\"EPSG\\\",4326]]\""
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#notad-que-eso-cambia-el-sistema-de-referencia-pero-no-las-coordenadas-en-si",
    "href": "AEMER-2_Analisis_espacial.html#notad-que-eso-cambia-el-sistema-de-referencia-pero-no-las-coordenadas-en-si",
    "title": "Análisis de datos espaciales en R",
    "section": "Notad que eso cambia el sistema de referencia pero no las coordenadas en si",
    "text": "Notad que eso cambia el sistema de referencia pero no las coordenadas en si\n\npar(mfrow = c(1, 2))\nplot(arg)\nplot(pp)"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#si-queremos-convertir-coordenadas-entre-crs-tenemos-que-proyectar-los-datos",
    "href": "AEMER-2_Analisis_espacial.html#si-queremos-convertir-coordenadas-entre-crs-tenemos-que-proyectar-los-datos",
    "title": "Análisis de datos espaciales en R",
    "section": "Si queremos convertir coordenadas entre CRS tenemos que proyectar los datos",
    "text": "Si queremos convertir coordenadas entre CRS tenemos que proyectar los datos\n\nnewcrs &lt;- \"+proj=robin +datum=WGS84\"\n\narg_rob &lt;- terra::project(arg, newcrs)\n\narg_4326 &lt;- terra::project(arg_rob, \"EPSG:4326\")\npar(mfrow=c(1, 3))\nplot(arg)\nplot(arg_rob)\nplot(arg_4326)"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#también-se-pueden-proyectar-datos-raster",
    "href": "AEMER-2_Analisis_espacial.html#también-se-pueden-proyectar-datos-raster",
    "title": "Análisis de datos espaciales en R",
    "section": "También se pueden proyectar datos raster",
    "text": "También se pueden proyectar datos raster\n\nstck_rob &lt;- terra::project(stck, newcrs)\ncrs(stck_rob)\n\n[1] \"PROJCRS[\\\"unknown\\\",\\n    BASEGEOGCRS[\\\"unknown\\\",\\n        DATUM[\\\"World Geodetic System 1984\\\",\\n            ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n                LENGTHUNIT[\\\"metre\\\",1]],\\n            ID[\\\"EPSG\\\",6326]],\\n        PRIMEM[\\\"Greenwich\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8901]]],\\n    CONVERSION[\\\"unknown\\\",\\n        METHOD[\\\"Robinson\\\"],\\n        PARAMETER[\\\"Longitude of natural origin\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8802]],\\n        PARAMETER[\\\"False easting\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8806]],\\n        PARAMETER[\\\"False northing\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8807]]],\\n    CS[Cartesian,2],\\n        AXIS[\\\"(E)\\\",east,\\n            ORDER[1],\\n            LENGTHUNIT[\\\"metre\\\",1,\\n                ID[\\\"EPSG\\\",9001]]],\\n        AXIS[\\\"(N)\\\",north,\\n            ORDER[2],\\n            LENGTHUNIT[\\\"metre\\\",1,\\n                ID[\\\"EPSG\\\",9001]]]]\""
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#ahora-si-que-las-coordenadas-aparecen-desplazadas",
    "href": "AEMER-2_Analisis_espacial.html#ahora-si-que-las-coordenadas-aparecen-desplazadas",
    "title": "Análisis de datos espaciales en R",
    "section": "Ahora si que las coordenadas aparecen “desplazadas”",
    "text": "Ahora si que las coordenadas aparecen “desplazadas”\n\npar(mfrow = c(1, 2))\nplot(stck[[1]])\nplot(stck_rob[[1]])\n\n\n\nNotad que los píxeles no tienen un tamaño regular"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#para-controlar-el-número-de-pixeles-y-su-resolución-debemos-crear-antes-una-plantilla",
    "href": "AEMER-2_Analisis_espacial.html#para-controlar-el-número-de-pixeles-y-su-resolución-debemos-crear-antes-una-plantilla",
    "title": "Análisis de datos espaciales en R",
    "section": "Para controlar el número de pixeles y su resolución debemos crear antes una plantilla",
    "text": "Para controlar el número de pixeles y su resolución debemos crear antes una plantilla\n\nx &lt;- rast(stck_rob)\nres(x) &lt;- 200000\nx\n\nclass       : SpatRaster \ndimensions  : 20, 38, 3  (nrow, ncol, nlyr)\nresolution  : 2e+05, 2e+05  (x, y)\nextent      : -13919275, -6319275, 2287814, 6287814  (xmin, xmax, ymin, ymax)\ncoord. ref. : +proj=robin +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \n\n\n\nstck_rob_2 &lt;- terra::project(stck, x)\nstck_rob_2\n\nclass       : SpatRaster \ndimensions  : 20, 38, 3  (nrow, ncol, nlyr)\nresolution  : 2e+05, 2e+05  (x, y)\nextent      : -13919275, -6319275, 2287814, 6287814  (xmin, xmax, ymin, ymax)\ncoord. ref. : +proj=robin +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs \nsource(s)   : memory\nnames       :    lyr.1,    lyr.1,    lyr.1 \nmin values  :  1.00000,    1.000, 1.000000 \nmax values  : 99.18499, 9845.148, 9.958177"
  },
  {
    "objectID": "AEMER-2_Analisis_espacial.html#veamos-el-resultado",
    "href": "AEMER-2_Analisis_espacial.html#veamos-el-resultado",
    "title": "Análisis de datos espaciales en R",
    "section": "Veamos el resultado",
    "text": "Veamos el resultado\n\npar(mfrow = c(1, 3))\nplot(stck[[2]])\nplot(stck_rob[[2]])\nplot(stck_rob_2[[2]])"
  },
  {
    "objectID": "AEMER-2_Ejercicios.html",
    "href": "AEMER-2_Ejercicios.html",
    "title": "Análisis espaciales y multivariantes con R aplicados a estudios de biodiversidad",
    "section": "",
    "text": "project()\nProyecta las coordenadas de los objetos espaciales a un sistema de coordenadas diferentes. Para conseguir los códigos EPSG de distintos sistemas de proyeccion podéis usar la siguiente página: https://epsg.io/\n[]\nLos corchetes sirven para extraer elementos de ciertas posiciones en los objetos de R. Se pueden usar también con los objetos espaciales\n==\nSe usa para realizar comparaciones y generar un vector de valores lógicos que indican cuando se cumple una condición de igualdad.\nwrite.\n\n\n\n1. Cargue los límites administrativos de los departamentos de Argentina en un objeto llamado “departamentos”. Posteriormente, filtre los municipios para retener sólo los departamentos de la provincia de “Buenos Aires”. Finalmente, proyecte los datos de estos municipios desde el sistema de coordenadas en longitud-latitud al sistema UTM21 sur, para lo que podéis usar el código “EPSG:32721”. Ahora dibuje dos mapas uno con el mapa de la provincia de Buenos Aires en longitud-latitud y el otro en UTM21s. Por último guarda el objeto vectorial de Buenos Aires con las coordenadas en UTM21s como un fichero geopackge nuevo, llamado “BuenosAires.gpkg”.\n\n\nSolución (no mirar de primeras)\nlibrary(geodata)\ndepartamentos &lt;- gadm(\"ARG\", 2, path = \".\")\nba &lt;- departamentos[which(departamentos$NAME_1 == \"Buenos Aires\")]\nba_utm &lt;- project(ba, \"epsg:32721\")\npar(mfrow = c(1, 2))\nplot(ba)\nplot(ba_utm)"
  },
  {
    "objectID": "AEMER-2_Ejercicios.html#funciones-útiles",
    "href": "AEMER-2_Ejercicios.html#funciones-útiles",
    "title": "Análisis espaciales y multivariantes con R aplicados a estudios de biodiversidad",
    "section": "",
    "text": "project()\nProyecta las coordenadas de los objetos espaciales a un sistema de coordenadas diferentes. Para conseguir los códigos EPSG de distintos sistemas de proyeccion podéis usar la siguiente página: https://epsg.io/\n[]\nLos corchetes sirven para extraer elementos de ciertas posiciones en los objetos de R. Se pueden usar también con los objetos espaciales\n==\nSe usa para realizar comparaciones y generar un vector de valores lógicos que indican cuando se cumple una condición de igualdad.\nwrite."
  },
  {
    "objectID": "AEMER-2_Ejercicios.html#ejercicios",
    "href": "AEMER-2_Ejercicios.html#ejercicios",
    "title": "Análisis espaciales y multivariantes con R aplicados a estudios de biodiversidad",
    "section": "",
    "text": "1. Cargue los límites administrativos de los departamentos de Argentina en un objeto llamado “departamentos”. Posteriormente, filtre los municipios para retener sólo los departamentos de la provincia de “Buenos Aires”. Finalmente, proyecte los datos de estos municipios desde el sistema de coordenadas en longitud-latitud al sistema UTM21 sur, para lo que podéis usar el código “EPSG:32721”. Ahora dibuje dos mapas uno con el mapa de la provincia de Buenos Aires en longitud-latitud y el otro en UTM21s. Por último guarda el objeto vectorial de Buenos Aires con las coordenadas en UTM21s como un fichero geopackge nuevo, llamado “BuenosAires.gpkg”.\n\n\nSolución (no mirar de primeras)\nlibrary(geodata)\ndepartamentos &lt;- gadm(\"ARG\", 2, path = \".\")\nba &lt;- departamentos[which(departamentos$NAME_1 == \"Buenos Aires\")]\nba_utm &lt;- project(ba, \"epsg:32721\")\npar(mfrow = c(1, 2))\nplot(ba)\nplot(ba_utm)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Análisis Espacial y Multivariante en R (AEMeR) aplicados a estudios de Biodiversidad",
    "section": "",
    "text": "Esta es la web con los materiales del curso:\n\nTema 1: Introducción a R. Presentación - Ejercicios\nTema 2: Manejo de datos espaciales en R. Presentación - Ejercicios\n\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  }
]